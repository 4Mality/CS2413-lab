#include <stdio.h>
#include <stdlib.h>

// TreeNode definition
typedef struct TreeNode {
    int val;
    struct TreeNode* left;
    struct TreeNode* right;
} TreeNode;

// Helper function to create a new node
TreeNode* newNode(int val) {
    TreeNode* node = (TreeNode*)malloc(sizeof(TreeNode));
    node->val = val;
    node->left = node->right = NULL;
    return node;
}

// Inorder Traversal
void inorder(TreeNode* root) {
    if (root == NULL) return;
    inorder(root->left);
    printf("%d ", root->val);
    inorder(root->right);
}

int main() {
    TreeNode* root = newNode(1);
    root->left = newNode(2);
    root->right = newNode(3);

    root->left->left = newNode(4);
    root->left->right = newNode(5);

    root->left->right->left = newNode(6);
    root->left->right->right = newNode(7);

    root->right->right = newNode(8);
    root->right->right->left = newNode(9);

    printf("Inorder Traversal: ");
    inorder(root);
    printf("\n");

    return 0;
}
